<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 配置自动扫描的包 -->
	<!-- <context:component-scan base-package="ustc.sse.eprint" use-default-filters="false"/> -->
<!-- 	<context:component-scan base-package="ustc.sse.eprint"
			use-default-filters="false"> -->   
		<!-- 添加use-default-filters="false"时，导致 not found for dependency: expected at least 1 bean which qualifies as autowire-->
		<context:component-scan base-package="ustc.sse.eprint">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>


<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.tomcat.dbcp.dbcp.BasicDataSource"  destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql:///Eprint" />
		<property name="username" value="root" />
		<property name="password" value="admin" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="3" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="500" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="2" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="1" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>ustc/sse/eprint/domain/Admin.hbm.xml</value>
				<value>ustc/sse/eprint/domain/Employee.hbm.xml</value>
				<value>ustc/sse/eprint/domain/Files.hbm.xml</value>
				<value>ustc/sse/eprint/domain/Printer.hbm.xml</value>
				<value>
					ustc/sse/eprint/domain/EmployeeLog.hbm.xml
				</value>
				<value>ustc/sse/eprint/domain/PrinterLog.hbm.xml</value>
				<value>ustc/sse/eprint/domain/AdminLog.hbm.xml</value></list>
		</property>
		<property name="hibernateProperties">
			<props>
				<!-- 数据库的方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 二级缓存  还需在类上提示 -->
				<!-- <prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> -->
			</props>
		</property>
	</bean>
	
	<!-- 配置事务管理器统一管理SessionFactory的事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
      <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 启用事务注解 --> <!-- 还需要在相应的类上进行@Transactional注解或对应的方法上 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<bean id="basicDao" class="ustc.sse.eprint.basicdao.BasicDao">
	<property name="sessionFactory" ref="sessionFactory"></property>	
	</bean>
	

	</beans>
	